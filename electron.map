{"version":3,"file":"electron","sources":["src-electron/messages.ts","adapter/electron.ts"],"sourcesContent":["export const messages = {\n    getFile: \"GETFILE\"\n}\n\nexport type GetFileResult = Promise<{\n    filename: string;\n    content: Buffer;\n    ext: string;\n} | \"cancelled\">\n","\nimport { ipcRenderer } from 'electron';\nimport {GetFileResult, messages} from '../src-electron/messages';\n\nconst getFile = async () =>{\n    try {\n        return (ipcRenderer.invoke(messages.getFile) as GetFileResult);\n    } catch (error) {\n        console.log(error);\n        return \"failed\" as \"failed\";\n    }\n}\n\nconst ElectronAdapter : Adapter = {\n    getFile\n}\n\nexport default ElectronAdapter;"],"names":[],"mappings":";;AAAO,MAAM,QAAQ,GAAG;IACpB,OAAO,EAAE,SAAS;CACrB;;ACED,MAAM,OAAO,GAAG;IACZ,IAAI;QACA,OAAQ,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAmB,CAAC;KAClE;IAAC,OAAO,KAAK,EAAE;QACZ,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACnB,OAAO,QAAoB,CAAC;KAC/B;AACL,CAAC,CAAA;MAEK,eAAe,GAAa;IAC9B,OAAO;;;;;"}